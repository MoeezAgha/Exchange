@using Exchange.UI.Library.Pages
@using Exchange.WebApp.Components.Layout
@using Microsoft.AspNetCore.Components.Authorization
@using Exchange.UI.Library.Helper.StateProviderHelper;
@using Exchange.UI.Library.Services;
@inject CustomAuthenticationStateProvider AuthenticationStateProvider;
@inject LoadingService LoadingService



    <CascadingAuthenticationState>
        <Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="@_exterAssemblies">
            <Found Context="routeData">
                    <LoadingWrapper>
                 <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                    <NotAuthorized>
                        <h1>Sorry</h1>
                        <p>You're not authorized to reach this page.</p>
                        <p>You may need to log in as a different user.</p>
                    </NotAuthorized>
                    <Authorizing>
              
                        <div class="loader-container">
                            <div class="loader"></div>
                            <p>Authentication in progress...</p>
                        </div>
                    </Authorizing>
                </AuthorizeRouteView>
        </LoadingWrapper>
        
            </Found>
            <NotFound>
                <CascadingAuthenticationState>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <h1>Sorry</h1>
                        <p>Sorry, there's nothing at this address.</p>
                    </LayoutView>
                </CascadingAuthenticationState>
            </NotFound>
        </Router>

    </CascadingAuthenticationState>


@code {
    public List<System.Reflection.Assembly> 
    _exterAssemblies = new List<System.Reflection.Assembly>
  {
    typeof(TagForm).Assembly
  };



}

